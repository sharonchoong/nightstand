{"version":3,"sources":["App.js","index.js","settings_applications.svg"],"names":["Weather","this","timerID","setInterval","tickHour","clearInterval","props","getLocation","temp_unit","unit","wind_unit","currentWeather","weather_symbol","weather","map","weatherdata","i","className","key","main","width","alt","src","icon","style","lineHeight","description","name","sys","country","temp","toFixed","fontWeight","humidity","wind","speed","clouds","all","React","Component","WeatherForecast","forecastWeather","daySet","list","length","new_day","moment","unix","dt","format","indexOf","Date","getHours","push","weatherCard","day","hourCard","filter","dt_txt","overflowX","overflowScrolling","WebkitOverflowScrolling","whiteSpace","Clock","state","date","tickSecond","setState","SuggestDropdown","delayTimer","locationsuggestions","location_query","query","apikey","clearTimeout","that","setTimeout","axios","get","params","q","type","sort","cnt","appid","then","response","locationsuggest","data","cityid","id","latitude","coord","lat","longitude","lon","catch","error","alert","message","locationdropdowns","suggestion","Dropdown","Item","as","onClick","onLocationChange","target","rel","e","stopPropagation","href","FormControl","value","onChange","suggestLocations","placeholder","aria-label","show","Menu","Settings","useState","setShow","showAlert","input","locationcards","locations","loc","ListGroup","action","active","selected","Button","size","variant","role","settingsImg","Modal","onHide","Header","closeButton","Title","Body","InputGroup","disabled","Append","onKeySave","Alert","display","ButtonToolbar","ToggleButtonGroup","defaultValue","onUnitChange","ToggleButton","App","unitSystem","unitsystem","slice","location","concat","is_selected","splice","coords","navigator","geolocation","getCurrentPosition","positions","getWeather","Number","split","undefined","units","spread","responsecurrent","responseforecast","newcoords","keyInput","newUnit","handleKeySave","handleUnitChange","handleLocationChange","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4fe2d3f4.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport moment from 'moment';\nimport settingsImg from './settings_applications.svg';\nimport Modal from 'react-bootstrap/Modal';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Alert from 'react-bootstrap/Alert'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nclass Weather extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t  () => this.tickHour(), 3600000\n\t\t);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\ttickHour() {\n\t\tthis.props.getLocation();\n\t}\n\trender() {\n\t\tconst temp_unit = this.props.unit === \"metric\" ? \"°C\": \"°F\";\n\t\tconst wind_unit = this.props.unit === \"metric\" ? \"m/s\": \"mph\";\n\t\tif (this.props.currentWeather)\n\t\t{\n\t\t\tconst weather_symbol = this.props.currentWeather.weather.map((weatherdata, i) =>{\n\t\t\t\treturn(\n\t\t\t\t<div className=\"col-auto\" key={weatherdata.main}>\n\t\t\t\t\t<div><img className=\"weatherIcon\" width=\"160\" alt={weatherdata.main} src={\"http://openweathermap.org/img/wn/\" + weatherdata.icon + \"@2x.png\"}/></div>\n\t\t\t\t\t<div className=\"text-capitalize font-weight-bold\" style={{lineHeight: \"1\"}}>{weatherdata.description}</div>\n\t\t\t\t</div>)\n\t\t\t})\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"currentWeather row justify-content-center\">\n\t\t\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t\t\t<div className=\"row\">{weather_symbol}</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className='col small'>\n\t\t\t\t\t\t\t\t{this.props.currentWeather.name + \", \" + this.props.currentWeather.sys.country}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t\t\t<div className=\"temp\" style={{lineHeight: \"1\"}}>{this.props.currentWeather.main.temp.toFixed() + temp_unit}</div>\n\t\t\t\t\t\t\t<div className=\"small\">\n\t\t\t\t\t\t\t\t<div className=\"small\" style={{fontWeight: \"normal\"}}>Humidity: {this.props.currentWeather.main.humidity}%</div>\n\t\t\t\t\t\t\t\t<div className=\"small\" style={{fontWeight: \"normal\"}}>Wind: {this.props.currentWeather.wind.speed + wind_unit}</div>\n\t\t\t\t\t\t\t\t<div className=\"small\" style={{fontWeight: \"normal\"}}>Cloudiness: {this.props.currentWeather.clouds.all}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>);\n\t\t}\n\t\telse\n\t\t\treturn null;\n\t}\n}\n\nclass WeatherForecast extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t  () => this.tickHour(), 3600000\n\t\t);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\ttickHour() {\n\t\tthis.props.getLocation();\n\t}\n\trender() {\n\t\tconst temp_unit = this.props.unit === \"metric\" ? \"°C\": \"°F\";\n\t\tconst wind_unit = this.props.unit === \"metric\" ? \"m/s\": \"mph\";\n\t\t\n\t\tif (this.props.forecastWeather)\n\t\t{\n\t\t\tlet daySet = [];\n\t\t\tfor (let i = 0; i < this.props.forecastWeather.list.length; i++)\n\t\t\t{\n\t\t\t\tconst new_day = moment.unix(this.props.forecastWeather.list[i].dt).format('dddd Do');\n                if (daySet.indexOf(new_day) === -1 && new Date(this.props.forecastWeather.list[i].dt * 1000).getHours() >= 8 && new Date(this.props.forecastWeather.list[i].dt * 1000).getHours() <= 18)\n\t                daySet.push(new_day);\n\t\t\t}\n\t\t\tconst weatherCard = daySet.map((day, i) => {\n\t\t\t\tconst hourCard = this.props.forecastWeather.list.filter((weatherdata, i) => \n\t\t\t\t\tnew Date(weatherdata.dt * 1000).getHours() >= 8 && new Date(weatherdata.dt * 1000).getHours() <= 18 && moment.unix(weatherdata.dt).format('dddd Do') === day\n\t\t\t\t).map((weatherdata, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t<div key={weatherdata.dt_txt} className=\"col\">\n\t\t\t\t\t\t<div>{moment.unix(weatherdata.dt).format('h a')}</div>\n\t\t\t\t\t\t<div><img className=\"weatherIcon\" alt={weatherdata.weather[0].main} src={\"http://openweathermap.org/img/wn/\" + weatherdata.weather[0].icon + \"@2x.png\"}/></div>\n\t\t\t\t\t\t<div>{weatherdata.main.temp.toFixed() + temp_unit}</div>\n\t\t\t\t\t\t<div className=\"small\">\n\t\t\t\t\t\t\t<div className=\"\" style={{fontWeight: \"normal\"}}>{weatherdata.wind.speed + wind_unit + \" wind\"}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t<div key={day} className=\"border\">\n\t\t\t\t\t<div>{day}</div>\n\t\t\t\t\t<div className=\"d-flex flex-row flex-nowrap\">{hourCard}</div>\n\t\t\t\t</div>\n                );\n            }); \n\t\t\treturn (\n\t\t\t\t<div className=\"d-flex flex-row flex-nowrap\" style={{overflowX: \"scroll\", overflowScrolling: \"touch\", WebkitOverflowScrolling: \"touch\", whiteSpace: \"nowrap\"}}>\n\t\t\t\t\t{weatherCard}\n\t\t\t\t</div>);\n\t\t}\n\t\telse\n\t\t\treturn null;\n\t}\n}\n\nclass Clock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {date: moment()};\n\t}\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t  () => this.tickSecond(), 1000\n\t\t);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\ttickSecond() {\n\t\tthis.setState({\n\t\t  date: moment()\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<span className=\"time\">{this.state.date.format('h:mm')}</span>\n\t\t\t\t<span className=\"date\">{this.state.date.format(':ss a')}</span>\n\t\t\t</div>\n\t\t\t<div className=\"date col-auto\">{this.state.date.format('dddd, MMMM Do YYYY')}</div>\n\t\t</div>\n    );\n  }\n}\n\nclass SuggestDropdown extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.delayTimer = null;\n\t\tthis.state = {locationsuggestions: [], location_query: \"\"};\n\t}\n\t\n\tsuggestLocations(query) {\n\t\tthis.setState({location_query: query});\n\t\tif (this.props.apikey !== \"\" && query.length > 3)\n\t\t{\n\t\t\tclearTimeout(this.delayTimer);\n\t\t\tconst that = this;\n\t\t\tthis.delayTimer = setTimeout(function() {\n\t\t\t\taxios.get('https://api.openweathermap.org/data/2.5/find', {\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tq: query,\n\t\t\t\t\t\ttype: \"like\",\n\t\t\t\t\t\tsort: \"population\",\n\t\t\t\t\t\tcnt: 10,\n\t\t\t\t\t\tappid: that.props.apikey\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlet locationsuggest = [];\n\t\t\t\t\tfor (let i = 0; i < response.data.list.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlocationsuggest.push({ \t\n\t\t\t\t\t\t\tname: response.data.list[i].name + \", \" + response.data.list[i].sys.country,\n\t\t\t\t\t\t\tcityid: response.data.list[i].id,\n\t\t\t\t\t\t\tlatitude: response.data.list[i].coord.lat,\n\t\t\t\t\t\t\tlongitude: response.data.list[i].coord.lon\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthat.setState({locationsuggestions: locationsuggest });\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\talert(\"When retrieving locations: \" + error + \". \" + \n\t\t\t\t\t(error.response ? error.response.data.message: \"\"));\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}, 500);\n\t\t} else\n\t\t{\n\t\t\tthis.setState({locationsuggestions: [] });\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst locationdropdowns = this.state.locationsuggestions.map((suggestion, i) => {\n\t\t\treturn (\n\t\t\t<Dropdown.Item as=\"button\" key={'dropdown_' + suggestion.latitude + ',' + suggestion.longitude}\n\t\t\tonClick={() => {this.props.onLocationChange(\"add\", suggestion ); this.setState({location_query: \"\", locationsuggestions: []}) }}>\n\t\t\t\t{suggestion.name}&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" rel=\"noopener noreferrer\"\n\t\t\t\tkey={'googlemap_' + suggestion.latitude + ',' + suggestion.longitude} onClick={(e) => e.stopPropagation()}\n\t\t\t\thref={\"https://www.google.com/maps/search/?api=1&query=\" + suggestion.latitude+\",\" + suggestion.longitude}>\n\t\t\t\tCheck on map</a>\n\t\t\t</Dropdown.Item>);\n\t\t});\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<FormControl value={this.state.location_query}\n\t\t\t\t\tonChange={(e) => this.suggestLocations(e.target.value)}\n\t\t\t\t\tplaceholder=\"Add location <City, country code> (e.g. London, UK)\" aria-label=\"Location\"/>\n\t\t\t\t<Dropdown show={this.state.locationsuggestions.length > 0}>\n\t\t\t\t\t<Dropdown.Menu>{locationdropdowns}</Dropdown.Menu>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction Settings(props) {\n\t\tconst [show, setShow] = useState(false);\n\t\tconst handleClose = () => setShow(false);\n\t\tconst handleShow = () => setShow(true);\n\t\tconst showAlert = props.apikey === \"\";\n\t\tlet input = props.apikey;\n\t\tconst locationcards = props.locations.map((loc, i) => {\n\t\t\treturn (\n\t\t\t<ListGroup.Item as=\"div\" action active={loc.selected} key={'location_' + loc.latitude + ',' + loc.longitude}\n\t\t\tonClick={() => props.onLocationChange(\"select\", loc)}>\n\t\t\t\t{loc.name}\n\t\t\t\t<Button as=\"div\" key={\"del_\" + loc.latitude + ',' + loc.longitude}\n\t\t\t\tonClick={(e) => {props.onLocationChange(\"delete\", loc); e.stopPropagation();}}\n\t\t\t\tsize=\"sm\" variant=\"danger\" className=\"float-right p-0 pl-2 pr-2\">Delete</Button>\n\t\t\t</ListGroup.Item>);\n\t\t});\n\t\t\n\t\treturn (\n\t\t<div className=\"float-right\">\n\t\t\t<a className=\"btn btn-sm\" href=\"#settings\" role=\"button\" onClick={handleShow}>\n\t\t\t\t<img className=\"settings\" src={settingsImg} alt=\"Settings\"/>\n\t\t\t</a>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Settings</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h5>OpenWeatherMap API Key</h5>\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t<FormControl onChange={(e) => input = e.target.value} disabled={!showAlert}\n\t\t\t\t\t\t\tplaceholder=\"Paste your API key here\" aria-label=\"OpenWeatherMap API Key\"/>\n\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => props.onKeySave(input)}>Save</Button>\n\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<Alert variant=\"warning\" show={showAlert}><a href=\"https://openweathermap.org/api\" target=\"_blank\" rel=\"noopener noreferrer\">Sign up for a free API key to display weather.</a></Alert>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{display: showAlert ? 'none' : 'block' }}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h5>Location</h5>\n\t\t\t\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t\t\t\t<ListGroup>{locationcards}</ListGroup>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<SuggestDropdown apikey={props.apikey} onLocationChange={props.onLocationChange}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-3\">\n\t\t\t\t\t\t\t<h5>Unit System</h5>\n\t\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={\"imperial\"}\n\t\t\t\t\t\t\t\tonChange={(e) => props.onUnitChange(e)}>\n\t\t\t\t\t\t\t\t\t<ToggleButton className=\"btn-secondary\" value={\"metric\"}>Metric</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton className=\"btn-secondary\" value={\"imperial\"}>Imperial</ToggleButton>\n\t\t\t\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</div>\n    );\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.unitSystem = null;\n\t\tthis.state = {\n\t\t\tlocations: [],\n\t\t\tunitsystem: \"imperial\",\n\t\t\tcurrentWeather: null,\n\t\t\tapikey: \"\"\n\t\t};\n\t}\n\thandleLocationChange(action, loc) {\n\t\tconst locations = this.state.locations.slice();\n\t\tif (action === \"add\" )\n\t\t{\n\t\t\tif (locations.filter((location) => { return loc.cityid === location.cityid; }).length === 0)\n\t\t\t{\n\t\t\t\tloc.selected = false;\n\t\t\t\tthis.setState({ locations: locations.concat([loc])});\t\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (let i = 0; i < locations.length; i++) {\n\t\t\t\tif (locations[i].cityid === loc.cityid)\n\t\t\t\t{\n\t\t\t\t\tif (action === \"delete\")\n\t\t\t\t\t{\n\t\t\t\t\t\tconst is_selected = locations[i].selected;\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tif (is_selected && locations.length > 0)\n\t\t\t\t\t\t\tlocations[0].selected = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (action === \"select\")\n\t\t\t\t\t{\n\t\t\t\t\t\tlocations[i].selected = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (action === \"select\")\n\t\t\t\t{\n\t\t\t\t\tlocations[i].selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({ locations: locations});\n\t\t\tthis.getLocation();\n\t\t}\n\t}\n\tgetLocation() {\n\t\tlet coords = { latitude: 51.476852, longitude: -0.000500, selected: true };\n\t\tif (this.state.locations.length === 0)\n\t\t{\n\t\t\tif (navigator.geolocation) {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t(positions) => {\n\t\t\t\t\tcoords.latitude = positions.coords.latitude;\n\t\t\t\t\tcoords.longitude = positions.coords.longitude;\n\t\t\t\t\tthis.getWeather(coords);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconst that = this;\n\t\t\t\t\taxios.get('https://ipgeolocation.com/?json=1')\n\t\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\t\tconst data = response.data.coords;\n\t\t\t\t\t\t\tcoords.latitude = Number(data.split(\",\")[0]);\n\t\t\t\t\t\t\tcoords.longitude = Number(data.split(\",\")[1]);\n\t\t\t\t\t\t\tthat.getWeather(coords);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\taxios.get('https://ipapi.co/json')\n\t\t\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\t\t\tconst data = response.data;\n\t\t\t\t\t\t\t\tcoords.latitude = Number(data.latitude);\n\t\t\t\t\t\t\t\tcoords.longitude = Number(data.longitude);\n\t\t\t\t\t\t\t\tthat.getWeather(coords);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\talert(\"When retrieving IP location: \" + error + \". \" + \n\t\t\t\t\t\t\t\t(error.response ? error.response.data.message: \"\"));\n\t\t\t\t\t\t\t\tthat.getWeather(coords);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\t\t} else \n\t\t{\n\t\t\tfor (let i = 0; i < this.state.locations.length;  i++)\n\t\t\t{\n\t\t\t\tif (this.state.locations[i].selected)\n\t\t\t\t{\n\t\t\t\t\tcoords.latitude = this.state.locations[i].latitude;\n\t\t\t\t\tcoords.longitude = this.state.locations[i].longitude;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.getWeather(coords);\n\t\t}\n\t}\n\tgetWeather(coords) {\n\t\tconst apikey = this.state.apikey !== \"\" ? this.state.apikey: this.apikey;\n\t\tconst unitsystem = this.unitSystem === null ? this.state.unitsystem: this.unitSystem;\n\t\tif (apikey !== \"\" && apikey !== null && apikey !== undefined)\n\t\t{\n\t\t\tconst that = this;\n\t\t\taxios.all([\n\t\t\taxios.get('https://api.openweathermap.org/data/2.5/weather', {\n\t\t\t\tparams: {\n\t\t\t\t\tlat: coords.latitude,\n\t\t\t\t\tlon: coords.longitude,\n\t\t\t\t\tappid: apikey,\n\t\t\t\t\tunits: unitsystem\n\t\t\t\t}\n\t\t\t}),\n\t\t\taxios.get('https://api.openweathermap.org/data/2.5/forecast', {\n\t\t\t\tparams: {\n\t\t\t\t\tlat: coords.latitude,\n\t\t\t\t\tlon: coords.longitude,\n\t\t\t\t\tappid: apikey,\n\t\t\t\t\tunits: unitsystem\n\t\t\t\t}\n\t\t\t})])\n\t\t\t.then(axios.spread((responsecurrent, responseforecast) => {\n\t\t\t\tlet locations = that.state.locations.slice();\n\t\t\t\tif (locations.filter((location) => \n\t\t\t\t{ return location.cityid === responsecurrent.data.id; }).length === 0)\n\t\t\t\t{\n\t\t\t\t\tconst newcoords = coords;\n\t\t\t\t\tnewcoords.name = responsecurrent.data.name + \", \" + responsecurrent.data.sys.country;\n\t\t\t\t\tnewcoords.cityid = responsecurrent.data.id;\n\t\t\t\t\tlocations = locations.concat([newcoords]);\n\t\t\t\t}\n\t\t\t\tthat.setState({ \n\t\t\t\t\tlocations: locations,\n\t\t\t\t\tapikey: apikey,\n\t\t\t\t\tunitsystem: unitsystem,\n\t\t\t\t\tcurrentWeather: responsecurrent.data, \n\t\t\t\t\tforecastWeather: responseforecast.data });\n\t\t\t}))\n\t\t\t.catch(function (error) {\n\t\t\t\talert(\"When retrieving weather: \" + error + \". \" + \n\t\t\t\t(error.response ? error.response.data.message: \"\"));\n\t\t\t});\n\t\t}\n\t}\n\thandleKeySave(keyInput) {\n\t\tthis.apikey = keyInput;\n\t\tthis.getLocation();\n\t}\n\thandleUnitChange(newUnit) {\n\t\tthis.unitSystem = newUnit;\n\t\tthis.getLocation();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Settings \n\t\t\tlocations={this.state.locations} apikey={this.state.apikey}\n\t\t\tonKeySave={(keyInput) => this.handleKeySave(keyInput)} \n\t\t\tonUnitChange={(newUnit) => this.handleUnitChange(newUnit)}\n\t\t\tonLocationChange={(action, location) => this.handleLocationChange(action, location)}\n\t\t\t/>\n\t\t\t<div className=\"Current container-fluid\">\n\t\t\t\t<header>\n\t\t\t\t\t<Clock state={this.state.unitsystem} />\n\t\t\t\t\t<Weather className=\"col-6 text-right\" \n\t\t\t\t\tcurrentWeather={this.state.currentWeather}\n\t\t\t\t\tgetLocation={() => this.getLocation() } \n\t\t\t\t\tunit={this.state.unitsystem}/>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t\t<div className=\"Forecast container-fluid\">\n\t\t\t\t<WeatherForecast forecastWeather={this.state.forecastWeather}\n\t\t\t\t\tgetLocation={() => this.getLocation() } \n\t\t\t\t\tunit={this.state.unitsystem}/>\n\t\t\t</div>\n\t\t\t<div className=\"text-muted small\">Nightstand icon, made from <a href=\"http://www.onlinewebfonts.com/icon\">Icon Fonts</a>, is licensed by CC BY 3.0</div>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\t\t\t","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/settings_applications.1e7b161a.svg\";"],"sourceRoot":""}