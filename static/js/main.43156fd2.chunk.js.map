{"version":3,"sources":["settings_applications.svg","App.js","index.js"],"names":["module","exports","Weather","this","timerID","setInterval","tickHour","clearInterval","props","getLocation","temp_unit","unit","wind_unit","currentWeather","weather_symbol","weather","map","weatherdata","i","className","key","main","style","maxWidth","width","alt","src","icon","lineHeight","description","name","sys","country","temp","toFixed","todayHighLow","low","high","wind","speed","fontWeight","humidity","clouds","all","React","Component","WeatherForecast","forecastWeather","daySet","list","length","new_day","moment","unix","dt","format","indexOf","Date","getHours","push","weatherCard","day","hourCard","filter","dt_txt","height","overflowX","overflowScrolling","WebkitOverflowScrolling","whiteSpace","Clock","state","date","tickSecond","setState","SuggestDropdown","delayTimer","locationsuggestions","location_query","query","apikey","clearTimeout","that","setTimeout","axios","get","params","q","type","sort","cnt","appid","then","response","locationsuggest","data","cityid","id","latitude","coord","lat","longitude","lon","catch","error","alert","message","locationdropdowns","suggestion","Dropdown","Item","as","onClick","onLocationChange","target","rel","e","stopPropagation","href","FormControl","value","onChange","suggestLocations","placeholder","aria-label","show","Menu","Settings","useState","setShow","showAlert","input","locationcards","locations","loc","ListGroup","action","active","selected","Button","size","variant","role","settingsImg","Modal","onHide","Header","closeButton","Title","Body","InputGroup","disabled","Append","onKeySave","Alert","display","ButtonToolbar","ToggleButtonGroup","defaultValue","onUnitChange","ToggleButton","App","unitSystem","unitsystem","slice","location","concat","is_selected","splice","coords","navigator","geolocation","getCurrentPosition","positions","getWeather","Number","split","undefined","units","spread","responsecurrent","responseforecast","newcoords","keyInput","newUnit","handleKeySave","handleUnitChange","handleLocationChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43156fd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings_applications.1e7b161a.svg\";","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport moment from 'moment';\r\nimport settingsImg from './settings_applications.svg';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nclass Weather extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.timerID = setInterval(\r\n\t\t  () => this.tickHour(), 3600000\r\n\t\t);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\ttickHour() {\r\n\t\tthis.props.getLocation();\r\n\t}\r\n\trender() {\r\n\t\tconst temp_unit = this.props.unit === \"metric\" ? \"°C\": \"°F\";\r\n\t\tconst wind_unit = this.props.unit === \"metric\" ? \"m/s\": \"mph\";\r\n\t\tif (this.props.currentWeather)\r\n\t\t{\r\n\t\t\tconst weather_symbol = this.props.currentWeather.weather.map((weatherdata, i) =>{\r\n\t\t\t\treturn(\r\n\t\t\t\t<div className=\"col-auto\" key={weatherdata.main} style={{maxWidth: \"300px\"}}>\r\n\t\t\t\t\t<div><img className=\"weatherIcon\" width=\"160\" alt={weatherdata.main} src={\"http://openweathermap.org/img/wn/\" + weatherdata.icon + \"@2x.png\"}/></div>\r\n\t\t\t\t\t<div className=\"text-capitalize font-weight-bold\" style={{lineHeight: \"1\"}}>{weatherdata.description}</div>\r\n\t\t\t\t</div>)\r\n\t\t\t})\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"currentWeather row justify-content-center\">\r\n\t\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t\t<div className=\"row\">{weather_symbol}</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className='col small'>\r\n\t\t\t\t\t\t\t\t{this.props.currentWeather.name + \", \" + this.props.currentWeather.sys.country}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t\t<div className=\"temp\" style={{lineHeight: \"1\"}}>{this.props.currentWeather.main.temp.toFixed() + temp_unit}</div>\r\n\t\t\t\t\t\t\t<div className=\"temp_small\" style={{lineHeight: \"1\"}}>{this.props.todayHighLow.low.toFixed() + temp_unit + \" | \" + this.props.todayHighLow.high.toFixed() + temp_unit}</div>\r\n\t\t\t\t\t\t\t<div className=\"wind\" style={{lineHeight: \"1\"}}>{this.props.currentWeather.wind.speed + wind_unit}</div>\r\n\t\t\t\t\t\t\t<div className=\"small\">\r\n\t\t\t\t\t\t\t\t<div className=\"small\" style={{fontWeight: \"normal\"}}>{this.props.currentWeather.main.humidity + \"% humid, \" + this.props.currentWeather.clouds.all + \"% clouds\"}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass WeatherForecast extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.timerID = setInterval(\r\n\t\t  () => this.tickHour(), 3600000\r\n\t\t);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\ttickHour() {\r\n\t\tthis.props.getLocation();\r\n\t}\r\n\trender() {\r\n\t\tconst temp_unit = this.props.unit === \"metric\" ? \"°C\": \"°F\";\r\n\t\tconst wind_unit = this.props.unit === \"metric\" ? \"m/s\": \"mph\";\r\n\t\t\r\n\t\tif (this.props.forecastWeather)\r\n\t\t{\r\n\t\t\tlet daySet = [];\r\n\t\t\tfor (let i = 0; i < this.props.forecastWeather.list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tconst new_day = moment.unix(this.props.forecastWeather.list[i].dt).format('dddd Do');\r\n                if (daySet.indexOf(new_day) === -1 && new Date(this.props.forecastWeather.list[i].dt * 1000).getHours() >= 8 && new Date(this.props.forecastWeather.list[i].dt * 1000).getHours() <= 20)\r\n\t                daySet.push(new_day);\r\n\t\t\t}\r\n\t\t\tconst weatherCard = daySet.map((day, i) => {\r\n\t\t\t\tconst hourCard = this.props.forecastWeather.list.filter((weatherdata, i) => \r\n\t\t\t\t\tnew Date(weatherdata.dt * 1000).getHours() >= 8 && new Date(weatherdata.dt * 1000).getHours() <= 20 && moment.unix(weatherdata.dt).format('dddd Do') === day\r\n\t\t\t\t).map((weatherdata, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t<div key={weatherdata.dt_txt} className=\"col flex-shrink-0\">\r\n\t\t\t\t\t\t<div><img className=\"weatherIcon\" alt={weatherdata.weather[0].main} height='80px' src={\"http://openweathermap.org/img/wn/\" + weatherdata.weather[0].icon + \"@2x.png\"}/></div>\r\n\t\t\t\t\t\t<div>{moment.unix(weatherdata.dt).format('h a')}</div>\r\n\t\t\t\t\t\t<div>{weatherdata.main.temp.toFixed() + temp_unit}</div>\r\n\t\t\t\t\t\t<div className=\"small\">\r\n\t\t\t\t\t\t\t<div style={{fontWeight: \"normal\"}}>{weatherdata.wind.speed + wind_unit + \" wind\"}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn (\r\n\t\t\t\t<div key={day} className=\"border flex-shrink-0\">\r\n\t\t\t\t\t<div>{day}</div>\r\n\t\t\t\t\t<div className=\"d-flex flex-row flex-nowrap\">{hourCard}</div>\r\n\t\t\t\t</div>\r\n                );\r\n            }); \r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"d-flex flex-row flex-nowrap\" style={{overflowX: \"scroll\", overflowScrolling: \"touch\", WebkitOverflowScrolling: \"touch\", whiteSpace: \"nowrap\"}}>\r\n\t\t\t\t\t{weatherCard}\r\n\t\t\t\t</div>);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass Clock extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {date: moment()};\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.timerID = setInterval(\r\n\t\t  () => this.tickSecond(), 1000\r\n\t\t);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\ttickSecond() {\r\n\t\tthis.setState({\r\n\t\t  date: moment()\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<span className=\"time\">{this.state.date.format('h:mm')}</span>\r\n\t\t\t\t<span className=\"date\">{this.state.date.format(':ss a')}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"date col-auto\">{this.state.date.format('dddd, MMMM Do YYYY')}</div>\r\n\t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SuggestDropdown extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.delayTimer = null;\r\n\t\tthis.state = {locationsuggestions: [], location_query: \"\"};\r\n\t}\r\n\t\r\n\tsuggestLocations(query) {\r\n\t\tthis.setState({location_query: query});\r\n\t\tif (this.props.apikey !== \"\" && query.length > 3)\r\n\t\t{\r\n\t\t\tclearTimeout(this.delayTimer);\r\n\t\t\tconst that = this;\r\n\t\t\tthis.delayTimer = setTimeout(function() {\r\n\t\t\t\taxios.get('https://api.openweathermap.org/data/2.5/find', {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tq: query,\r\n\t\t\t\t\t\ttype: \"like\",\r\n\t\t\t\t\t\tsort: \"population\",\r\n\t\t\t\t\t\tcnt: 10,\r\n\t\t\t\t\t\tappid: that.props.apikey\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tlet locationsuggest = [];\r\n\t\t\t\t\tfor (let i = 0; i < response.data.list.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocationsuggest.push({ \t\r\n\t\t\t\t\t\t\tname: response.data.list[i].name + \", \" + response.data.list[i].sys.country,\r\n\t\t\t\t\t\t\tcityid: response.data.list[i].id,\r\n\t\t\t\t\t\t\tlatitude: response.data.list[i].coord.lat,\r\n\t\t\t\t\t\t\tlongitude: response.data.list[i].coord.lon\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.setState({locationsuggestions: locationsuggest });\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\talert(\"When retrieving locations: \" + error + \". \" + \r\n\t\t\t\t\t(error.response ? error.response.data.message: \"\"));\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}, 500);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tthis.setState({locationsuggestions: [] });\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst locationdropdowns = this.state.locationsuggestions.map((suggestion, i) => {\r\n\t\t\treturn (\r\n\t\t\t<Dropdown.Item as=\"button\" key={'dropdown_' + suggestion.latitude + ',' + suggestion.longitude}\r\n\t\t\tonClick={() => {this.props.onLocationChange(\"add\", suggestion ); this.setState({location_query: \"\", locationsuggestions: []}) }}>\r\n\t\t\t\t{suggestion.name}&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" rel=\"noopener noreferrer\"\r\n\t\t\t\tkey={'googlemap_' + suggestion.latitude + ',' + suggestion.longitude} onClick={(e) => e.stopPropagation()}\r\n\t\t\t\thref={\"https://www.google.com/maps/search/?api=1&query=\" + suggestion.latitude+\",\" + suggestion.longitude}>\r\n\t\t\t\tCheck on map</a>\r\n\t\t\t</Dropdown.Item>);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<FormControl value={this.state.location_query}\r\n\t\t\t\t\tonChange={(e) => this.suggestLocations(e.target.value)}\r\n\t\t\t\t\tplaceholder=\"Add location <City, country code> (e.g. London, UK)\" aria-label=\"Location\"/>\r\n\t\t\t\t<Dropdown show={this.state.locationsuggestions.length > 0}>\r\n\t\t\t\t\t<Dropdown.Menu>{locationdropdowns}</Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction Settings(props) {\r\n\t\tconst [show, setShow] = useState(false);\r\n\t\tconst handleClose = () => setShow(false);\r\n\t\tconst handleShow = () => setShow(true);\r\n\t\tconst showAlert = props.apikey === \"\";\r\n\t\tlet input = props.apikey;\r\n\t\tconst locationcards = props.locations.map((loc, i) => {\r\n\t\t\treturn (\r\n\t\t\t<ListGroup.Item as=\"div\" action active={loc.selected} key={'location_' + loc.latitude + ',' + loc.longitude}\r\n\t\t\tonClick={() => props.onLocationChange(\"select\", loc)}>\r\n\t\t\t\t{loc.name}\r\n\t\t\t\t<Button as=\"div\" key={\"del_\" + loc.latitude + ',' + loc.longitude}\r\n\t\t\t\tonClick={(e) => {props.onLocationChange(\"delete\", loc); e.stopPropagation();}}\r\n\t\t\t\tsize=\"sm\" variant=\"danger\" className=\"float-right p-0 pl-2 pr-2\">Delete</Button>\r\n\t\t\t</ListGroup.Item>);\r\n\t\t});\r\n\t\t\r\n\t\treturn (\r\n\t\t<div className=\"float-right\">\r\n\t\t\t<a className=\"btn btn-sm\" href=\"#settings\" role=\"button\" onClick={handleShow}>\r\n\t\t\t\t<img className=\"settings\" src={settingsImg} alt=\"Settings\"/>\r\n\t\t\t</a>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Settings</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h5>OpenWeatherMap API Key</h5>\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<FormControl onChange={(e) => input = e.target.value} disabled={!showAlert}\r\n\t\t\t\t\t\t\tplaceholder=\"Paste your API key here\" aria-label=\"OpenWeatherMap API Key\"/>\r\n\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => props.onKeySave(input)}>Save</Button>\r\n\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<Alert variant=\"warning\" show={showAlert}><a href=\"https://openweathermap.org/api\" target=\"_blank\" rel=\"noopener noreferrer\">Sign up for a free API key to display weather.</a></Alert>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{display: showAlert ? 'none' : 'block' }}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Location</h5>\r\n\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t<ListGroup>{locationcards}</ListGroup>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<SuggestDropdown apikey={props.apikey} onLocationChange={props.onLocationChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mt-3\">\r\n\t\t\t\t\t\t\t<h5>Unit System</h5>\r\n\t\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={\"imperial\"}\r\n\t\t\t\t\t\t\t\tonChange={(e) => props.onUnitChange(e)}>\r\n\t\t\t\t\t\t\t\t\t<ToggleButton className=\"btn-secondary\" value={\"metric\"}>Metric</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t<ToggleButton className=\"btn-secondary\" value={\"imperial\"}>Imperial</ToggleButton>\r\n\t\t\t\t\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.unitSystem = null;\r\n\t\tthis.state = {\r\n\t\t\tlocations: [],\r\n\t\t\tunitsystem: \"imperial\",\r\n\t\t\tcurrentWeather: null,\r\n\t\t\tforecastWeather: null,\r\n\t\t\tapikey: \"\"\r\n\t\t};\r\n\t}\r\n\thandleLocationChange(action, loc) {\r\n\t\tconst locations = this.state.locations.slice();\r\n\t\tif (action === \"add\" )\r\n\t\t{\r\n\t\t\tif (locations.filter((location) => { return loc.cityid === location.cityid; }).length === 0)\r\n\t\t\t{\r\n\t\t\t\tloc.selected = false;\r\n\t\t\t\tthis.setState({ locations: locations.concat([loc])});\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < locations.length; i++) {\r\n\t\t\t\tif (locations[i].cityid === loc.cityid)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (action === \"delete\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst is_selected = locations[i].selected;\r\n\t\t\t\t\t\tlocations.splice(i, 1);\r\n\t\t\t\t\t\tif (is_selected && locations.length > 0)\r\n\t\t\t\t\t\t\tlocations[0].selected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (action === \"select\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocations[i].selected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (action === \"select\")\r\n\t\t\t\t{\r\n\t\t\t\t\tlocations[i].selected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.setState({ locations: locations});\r\n\t\t\tthis.getLocation();\r\n\t\t}\r\n\t}\r\n\tgetLocation() {\r\n\t\tlet coords = { latitude: 51.476852, longitude: -0.000500, selected: true };\r\n\t\tif (this.state.locations.length === 0)\r\n\t\t{\r\n\t\t\tif (navigator.geolocation) {\r\n\t\t\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\t(positions) => {\r\n\t\t\t\t\tcoords.latitude = positions.coords.latitude;\r\n\t\t\t\t\tcoords.longitude = positions.coords.longitude;\r\n\t\t\t\t\tthis.getWeather(coords);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconst that = this;\r\n\t\t\t\t\taxios.get('https://ipgeolocation.com/?json=1')\r\n\t\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\t\tconst data = response.data.coords;\r\n\t\t\t\t\t\t\tcoords.latitude = Number(data.split(\",\")[0]);\r\n\t\t\t\t\t\t\tcoords.longitude = Number(data.split(\",\")[1]);\r\n\t\t\t\t\t\t\tthat.getWeather(coords);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t\t\taxios.get('https://ipapi.co/json')\r\n\t\t\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\t\t\tconst data = response.data;\r\n\t\t\t\t\t\t\t\tcoords.latitude = Number(data.latitude);\r\n\t\t\t\t\t\t\t\tcoords.longitude = Number(data.longitude);\r\n\t\t\t\t\t\t\t\tthat.getWeather(coords);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t\t\t\talert(\"When retrieving IP location: \" + error + \". \" + \r\n\t\t\t\t\t\t\t\t(error.response ? error.response.data.message: \"\"));\r\n\t\t\t\t\t\t\t\tthat.getWeather(coords);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t} else \r\n\t\t{\r\n\t\t\tfor (let i = 0; i < this.state.locations.length;  i++)\r\n\t\t\t{\r\n\t\t\t\tif (this.state.locations[i].selected)\r\n\t\t\t\t{\r\n\t\t\t\t\tcoords.latitude = this.state.locations[i].latitude;\r\n\t\t\t\t\tcoords.longitude = this.state.locations[i].longitude;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.getWeather(coords);\r\n\t\t}\r\n\t}\r\n\tgetWeather(coords) {\r\n\t\tconst apikey = this.state.apikey !== \"\" ? this.state.apikey: this.apikey;\r\n\t\tconst unitsystem = this.unitSystem === null ? this.state.unitsystem: this.unitSystem;\r\n\t\tif (apikey !== \"\" && apikey !== null && apikey !== undefined)\r\n\t\t{\r\n\t\t\tconst that = this;\r\n\t\t\taxios.all([\r\n\t\t\taxios.get('https://api.openweathermap.org/data/2.5/weather', {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlat: coords.latitude,\r\n\t\t\t\t\tlon: coords.longitude,\r\n\t\t\t\t\tappid: apikey,\r\n\t\t\t\t\tunits: unitsystem\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\taxios.get('https://api.openweathermap.org/data/2.5/forecast', {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlat: coords.latitude,\r\n\t\t\t\t\tlon: coords.longitude,\r\n\t\t\t\t\tappid: apikey,\r\n\t\t\t\t\tunits: unitsystem\r\n\t\t\t\t}\r\n\t\t\t})])\r\n\t\t\t.then(axios.spread((responsecurrent, responseforecast) => {\r\n\t\t\t\tlet locations = that.state.locations.slice();\r\n\t\t\t\tif (locations.filter((location) => location.cityid === responsecurrent.data.id).length === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst newcoords = coords;\r\n\t\t\t\t\tnewcoords.name = responsecurrent.data.name + \", \" + responsecurrent.data.sys.country;\r\n\t\t\t\t\tnewcoords.cityid = responsecurrent.data.id;\r\n\t\t\t\t\tlocations = locations.concat([newcoords]);\r\n\t\t\t\t}\r\n\t\t\t\tlet low = responsecurrent.data.main.temp;\r\n\t\t\t\tlet high = responsecurrent.data.main.temp;\r\n\t\t\t\tfor (let i = 0; i < responseforecast.data.list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (moment.unix(responseforecast.data.list[i].dt).format('dddd Do') === moment().format('dddd Do'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (responseforecast.data.list[i].main.temp > high)\r\n\t\t\t\t\t\t\thigh = responseforecast.data.list[i].main.temp;\r\n\t\t\t\t\t\telse if (responseforecast.data.list[i].main.temp < low)\r\n\t\t\t\t\t\t\tlow = responseforecast.data.list[i].main.temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthat.setState({ \r\n\t\t\t\t\tlocations: locations,\r\n\t\t\t\t\tapikey: apikey,\r\n\t\t\t\t\tunitsystem: unitsystem,\r\n\t\t\t\t\tcurrentWeather: responsecurrent.data, \r\n\t\t\t\t\ttodayHighLow: { high: high, low: low },\r\n\t\t\t\t\tforecastWeather: responseforecast.data });\r\n\t\t\t}))\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\talert(\"When retrieving weather: \" + error + \". \" + \r\n\t\t\t\t(error.response ? error.response.data.message: \"\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleKeySave(keyInput) {\r\n\t\tthis.apikey = keyInput;\r\n\t\tthis.getLocation();\r\n\t}\r\n\thandleUnitChange(newUnit) {\r\n\t\tthis.unitSystem = newUnit;\r\n\t\tthis.getLocation();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Settings \r\n\t\t\tlocations={this.state.locations} apikey={this.state.apikey}\r\n\t\t\tonKeySave={(keyInput) => this.handleKeySave(keyInput)} \r\n\t\t\tonUnitChange={(newUnit) => this.handleUnitChange(newUnit)}\r\n\t\t\tonLocationChange={(action, location) => this.handleLocationChange(action, location)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"Current container-fluid\">\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<Clock state={this.state.unitsystem} />\r\n\t\t\t\t\t<Weather className=\"col-6 text-right\" \r\n\t\t\t\t\ttodayHighLow={this.state.todayHighLow}\r\n\t\t\t\t\tcurrentWeather={this.state.currentWeather}\r\n\t\t\t\t\tgetLocation={() => this.getLocation() } \r\n\t\t\t\t\tunit={this.state.unitsystem}/>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"Forecast container-fluid\">\r\n\t\t\t\t<WeatherForecast forecastWeather={this.state.forecastWeather}\r\n\t\t\t\t\tgetLocation={() => this.getLocation() } \r\n\t\t\t\t\tunit={this.state.unitsystem}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"text-muted small\">Nightstand icon, made from <a href=\"http://www.onlinewebfonts.com/icon\">Icon Fonts</a>, is licensed by CC BY 3.0</div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\t\t\t","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}